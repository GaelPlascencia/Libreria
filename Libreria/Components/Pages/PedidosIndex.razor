@page "/pedidos"
@inject IRepositorioLibros _repositorioLibros
@inject IRepositorioPedidoCliente _repositorioPedidos
@inject IRepositorioCliente _repositorioClientes
@inject NavigationManager _navigator
<PageTitle>Pedidos</PageTitle>

<div class="row">
    <div class="col">
        <h3>Lista de pedidos</h3>
    </div>
    <div class="col">
        <a href="pedidos/nuevo" class="btn btn-primary">Agregar pedido</a>
    </div>
</div>
@if (_pedidoClientes is null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else if (_pedidoClientes.Count == 0)
{
    <h2>No hay pedidos</h2>
}
else
{
    <table class="table table-striped text-center">
        <thead>
            <tr>
                <th>Cliente</th>
                <th>Libro</th>
                <th>Cantidad</th>
                <th>Fecha y hora</th>
                <th>Estado</th>
                <th colspan="2">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (PedidoCliente pedido in _pedidoClientes)
            {
                <tr>
                    <td>@pedido.Cliente!.Nombre</td>
                    <td>@pedido.Libro!.Titulo</td>
                    <td>@pedido.Cantidad</td>
                    <td>@pedido.Fecha_Pedido</td>
                    <td>@pedido.Estado</td>
                    <td>
                        <i class="bi bi-pencil-fill" @onclick="()=>Modificar(pedido.Id)"></i>
                        <i class="bi bi-trash-fill" @onclick="()=>Eliminar(pedido)"></i>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PedidoCliente>? _pedidoClientes = new();
    
    protected override async Task OnInitializedAsync()
    {
        _pedidoClientes = await _repositorioPedidos.GetAll();
    }
    private void Modificar(int id)
    {
        _navigator.NavigateTo($"/pedidos/nuevo/{id}");
    }
    private async void Eliminar(PedidoCliente pedido)
    {
        await _repositorioPedidos.Delete(pedido.Id);
        _pedidoClientes!.Remove(pedido);
        StateHasChanged();
    }
}
